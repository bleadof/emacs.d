#+TITLE: Emacs learning
#+TAGS: emacs todo
#+STARTUP: logdone

* TODO Learn to use multiple cursors
  - [X] Watch http://emacsrocks.com/e13.html
  - [X] Add it in the fundamental conf
  - [X] Bind keys
  - [X] Basics
  - [ ] Read more on the docs
* TODO Learn to use magit better
  - [X] How to stage
    - On the status buffer
      1. s
  - [X] How to unstage
    - On the status buffer
      1. u
  - [X] How to collapse diff on status mode
    - tab
    - 1, 2, 3
  - [X] How to commit
    - On the status buffer
      - without amend
        1. c
        2. c
        3. type commit message
        4. C-c C-c
      - with amend
        1. c
        2. a
        3. Edit commit message
        4. C-c C-c
  - [X] How to fetch
    - On the status buffer
      1. f
      2. a
         - for all
  - [X] How to push
    - On the status buffer
      1. P
      2. P
  - [X] How to checkout branch
    - On status buffer
      - origin branch
        1. b
        2. b
        3. select branch you want
        4. answer yes on creating local branch
        5. local branch on default has the same name
      - local branch
        1. b
        2. b
        3. select branch you want
  - [X] How to reset unstaged edit per file
    - On status buffer
      1. Expand file
      2. v
      3. Answer yes
  - [X] How to delete untracked file (kill)
    - On status buffer
      1. k
  - [X] How to interactively rebase
    - On status buffer
      1. E
      2. Decide starting point ie. HEAD~3
      3. Decide on what to do per commit
         - e edit
         - r reword
         - s squash
      4. C-x # when done
      5. Make the changes
      6. R on status buffer
      7. c to continue
    - On log buffer
      1. E
      3. Decide on what to do per commit
         - e edit
         - r reword
         - s squash
      4. C-x # when done
      5. Make the changes
      6. R on status buffer
      7. c to continue
  - [X] How to fetch and reset to origin state
    - On status buffer
      1. f
      2. -f to -prune
      3. a for all
      4. x to reset
      5. Choose the revision (origin/master maybe?)
      6. X to reset to the last committed state

* TODO Learn to use projectile better
  - [X] How to switch project
    1. C-c p p
  - [X] How to ag content
    1. C-c p s s
  - [X] List all project buffers
    1. C-c p b
  - [X] How to close project buffers
    1. C-c p k

* TODO Learn to use shell inside emacs
  - `M-x shell` works
  - `M-x ansi-term` is better
  - `M-x eshell` is also a possibility
    - http://www.masteringemacs.org/article/complete-guide-mastering-eshell
* TODO Add better scala support
* TODO Learn to use macros
  - http://emacsrocks.com/e02.html
  - http://emacsrocks.com/e03.html
* DONE Add buffer-move.el
  CLOSED: [2015-03-20 Fri 13:00]
  - http://www.johndcook.com/blog/2012/03/07/shuffling-emacs-windows/
* DONE Look into pallet (package manager in emacs using Cask)
  CLOSED: [2015-04-18 Sat 19:27]
  - https://github.com/rdallasgray/pallet
  - M-x pallet-init
    - creates a Cask file using information about installed packages from the package.el system
  - M-x pallet-install
    - installs packages listed in your Cask file
  - M-x pallet-update
    - updates installed packages
* DONE Add dictionary.el
  CLOSED: [2015-04-18 Sat 19:35]
  - H-M-d dictionary-search
  - H-M-m dictionary-match-words
* TODO Learn to use org-mode
  - Time logging
    - http://orgmode.org/manual/Clocking-commands.html#Clocking-commands
  - Cycle through TODO modes
    1. S-left
* TODO Look into company-mode
  - http://company-mode.github.io/
* TODO Look into tern
  - http://ternjs.net/
